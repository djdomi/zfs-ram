#!/bin/bash

#This script do the action of the systemd


##zfs pool name
POOL=rpool


#Size of first Device, can be M, G (1024M, 1G - M&G must be UPPERCASE)
SIZE0=1024M
SIZE1=512M


#yes/no (lowercase)
DEV0_ENABLE=yes
DEV1_ENABLE=no

# see as reference: https://www.unixarena.com/2013/07/zfs-zpool-cache-and-log-devices.html/
#log/cache

DEV0_TYPE=log
DEV1_TYPE=cache

##REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME###
##REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME###
echo please edit the script and remove these lines
echo we added this for security
exit 1
##REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME###
##REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME#####REMOVE##ME###

############################################
################ CODEBASE ##################
################ CODEBASE ##################
##                                        ##
## ONLY CHANGE WHEN YOU KNOW              ##
## WHAT YOU DO - it will else prevent     ##
## if the the system dont boot...         ##
## okay, its easy to fix :)               ##
##                                        ##
## zfs import -a -m                       ##
## zfs remove <POOLNAME> zram0 zram1      ##
##                                        ##
################ CODEBASE ##################
################ CODEBASE ##################
############################################



case "$1" in
        status)
        zpool iostat -v
        ;;

    start)

if [ "$DEV0_ENABLE" == 'yes' ] && [ "$DEV1_ENABLE" == 'yes' ]; 
		then 
			DEV=2
			
	elif [ "$DEV0_ENABLE" == 'yes' ] && [ "$DEV1_ENABLE" == 'no' ]; 
		then 
			DEV=1
	elif [ "$DEV0_ENABLE" == 'no' ] && [ "$DEV1_ENABLE" == 'yes' ]; 
		then 
			DEV=1
	elif [ "$DEV0_ENABLE" == 'no' ] && [ "$DEV1_ENABLE" == 'no' ]; 
		then 
			DEV=0
			echo "error, no drives used"
			exit 1

	else 
			echo unknown settings has been used, exiting
		exit 1
fi

if [ -z "$DEV" ]
then
      echo "\$DEV is empty, apporting hardly"
      exit 1
else
     modprobe zram num_devices=$DEVS
fi




                
                if [ "$DEV0_ENABLE" = yes ] 
                then 
                     echo $SIZE0 >/sys/block/zram0/disksize
                     zpool add $POOL $DEV0_TYPE /dev/zram0
                else
                     echo "Device 1 not active"; fi

                if [ "$DEV1_ENABLE" = yes ] 
                then 
                     echo $SIZE1 >/sys/block/zram0/disksize
                     zpool add $POOL $DEV1_TYPE /dev/zram1
                else
                     echo "Device 1 not active"; fi
                      

        ;;
    stop)

                if [ "$DEV0_ENABLE" = yes ] 
                then 
                    
                     zpool remove $POOL /dev/zram0
                else
                     echo "Device 0 was not active"; fi

                if [ "$DEV1_ENABLE" = yes ] 
                then 

                     zpool add $POOL /dev/zram1
                else
                     echo "Device 1 was not active"; fi



        wait
        sleep 1.5
        modprobe --remove zram
        ;;

    
 force-stop)
                      zpool remove $POOL /dev/zram0
                      zpool remove $POOL /dev/zram1
                      wait
                      sleep 1.5
                      modprobe --remove zram
                ;;
    *)
        echo "Usage: $(basename $0) (start | stop | force-stop | status)"
        exit 1
        ;;
esac

# End of file
